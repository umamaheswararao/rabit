https://floobits.com/juan131/intel-training-1/file/WELCOME.md:1
172.25.110.xx

https://tecadmin.net/install-oracle-virtualbox-on-ubuntu/

curl -Lo kubectl "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl" && chmod +x ./kubectl && sudo mv kubectl /usr/local/bin/


curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl


https://floobits.com/juan131/intel-training-1/file/WELCOME.md:10
https://floobits.com/juan131/intel-training-2/file/commands.bash:90

https://docs.google.com/presentation/d/1dNyCr3ehva-Pjv05M0RuFSscrsjHO9h6KVM_K041Fyg/edit#slide=id.g3f24765591_1_700
https://docs.google.com/presentation/d/1BkK1v4oiVZX2fFid9PXiRVizj1mc_AC5s6Ewq5K09Ic/edit#slide=id.p3

https://github.com/bitnami-labs/k8s-training-resources

Training commands:

#
# Kubernetes Training
#

#######################
# Minikube Installation
#######################
## Linux installation
curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
## OS X installation
curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/

## First steps with Minikube
minikube start
minikube status
minikube ssh
minikube addons enable dashboard
minikube dashboard

######################
# Kubectl Installation
######################
## Linux installation
curl -Lo kubectl "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl" && chmod +x ./kubectl && sudo mv kubectl /usr/local/bin/
## OS X installation
curl -Lo kubectl "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/darwin/amd64/kubectl" && chmod +x ./kubectl && sudo mv kubectl /usr/local/bin/

###################################
# Configure Kubectl to use Minikube
###################################
## Get contexts
kubectl config get-contexts
## Use minikube context
kubectl config use-context minikube
kubectl config current-context
kubectl cluster-info

#######################
# Browse around K8s API
#######################
kubectl proxy --port 8080 &
curl http://127.0.0.1:8080/api
curl http://127.0.0.1:8080/api/v1

## Delete MongoDB dashboard
kubectl delete deploy mongo

######
# Pods
######
kubectl create -f resources/mongo-pod.yaml
kubectl get pods
## Labels
kubectl label pods mongo foo=bar
kubectl get pods --show-labels
kubectl get pods -l foo=bar
kubectl get pods -Lfoo

#############
# ReplicaSets
#############
kubectl create -f resources/nginx-rs.yaml
kubectl scale rs nginx --replicas=5
kubectl get pods --watch
# Delete a pod and observe
kubectl get pods
kubectl delete pod --wait=false "$(kubectl get pods -l app=nginx -o jsonpath='{.items[0].metadata.name}')" && kubectl get pods --watch
kubectl delete rs nginx

#############
# Deployments
#############
kubectl create -f resources/nginx-deployment.yaml
kubectl scale deployment nginx --replicas=4
kubectl get pods --watch
kubectl set image deployment nginx nginx=bitnami/nginx:1.16.0-r46 --all
kubectl get rs --watch
kubectl get pods --watch
kubectl edit deployment nginx
# Rollbacks
kubectl run dokuwiki --image=bitnami/dokuwiki --record
kubectl get deployments dokuwiki -o yaml
kubectl set image deployment/dokuwiki dokuwiki=bitnami/dokuwiki:09 --all --record
kubectl rollout history deployment/dokuwiki
kubectl get pods
kubectl rollout undo deployment/dokuwiki
kubectl rollout history deployment/dokuwiki
kubectl delete deploy dokuwiki

##########
# Services
##########
kubectl create -f resources/nginx-svc.yaml
kubectl get svc
kubectl get endpoints
kubectl delete -f resources/nginx-svc.yaml
kubectl expose deployment/nginx --name=nginx --port=80 --target-port=8080 --type=NodePort
kubectl get svc
kubectl get endpoints
curl "http://$(minikube ip):$(kubectl get svc nginx -o jsonpath='{.spec.ports[0].nodePort}')"

# DNS
kubectl create -f rexsources/busybox.yaml
kubectl exec -it busybox -- nslookup nginx
kubectl get svc
kubectl exec -ti busybox -- wget -O- http://nginx:80
# Clean cluster
kubectl delete pod busybox

#########
# Ingress
#########
## Installation
minikube addons list
minikube addons enable ingress
kubectl get deployments -n kube-system
kubectl get deployment nginx-ingress-controller -n kube-system -o yaml
## Use
kubectl create -f resources/ingress.yaml
echo "$(minikube ip)   foo.bar.com" | sudo tee -a /etc/hosts
curl http://foo.bar.com
# Clean cluster
kubectl delete ingress nginx
kubectl delete svc nginx
kubectl delete deploy nginx


###################
# App Configuration
###################
kubectl create -f resources/mysql.yaml
kubectl exec -it mysql -- mysql -u root -h 127.0.0.1
# ConfigMap
kubectl delete pod mysql
kubectl create configmap mysql --from-literal=replication-mode=master --from-literal=replication-user=master
kubectl create -f resources/mysql-with-cm.yaml
kubectl logs -f mysql
kubectl exec -it mysql -- mysql -u root -h 127.0.0.1
# Secrets
kubectl delete pod mysql
kubectl create secret generic mysql --from-literal=password=root
kubectl create -f resources/mysql-with-secrets.yaml
kubectl exec -it mysql -- mysql -h 127.0.0.1 -u root -proot
# Clean cluster
kubectl delete cm mysql
kubectl delete secret mysql
kubectl delete pod mysql

############
# namespaces
############
kubectl get ns
kubectl create ns myns
kubectl get ns/myns -o yaml
cat << 'EOF' >> mongo.yaml
apiVersion: v1
kind: Pod
metadata:
  name: mongo
  namespace: myns
spec:
  containers:
  - image: bitnami/mongodb
    name: mongo
EOF
kubectl create -f mongo.yaml
kubectl get pods
kubectl get pods -n myns
kubectl delete ns/myns
rm mongo.yaml

#########
# volumes
#########
# Sharing Volumes
kubectl create -f resources/share-volume.yaml
kubectl logs -f share-volume read
kubectl delete pod share-volume
# MariaDB with persistence
kubectl create -f resources/mariadb-pvc.yaml
kubectl get pvc
kubectl create -f resources/mariadb-persitence.yaml
kubectl exec -it "$(kubectl get pods -l app=mariadb -o jsonpath='{.items[0].metadata.name}')" -- mysql -u root
show databases;
create database intel_database;
exit
kubectl delete pod "$(kubectl get pods -l app=mariadb -o jsonpath='{.items[0].metadata.name}')"
kubectl logs "$(kubectl get pods -l app=mariadb -o jsonpath='{.items[0].metadata.name}')"
kubectl exec -it "$(kubectl get pods -l app=mariadb -o jsonpath='{.items[0].metadata.name}')" -- mysql -u root
show databases;
exit
kubectl delete deploy mariadb
kubectl delete pvc mariadb-data



Day-2:
#
# Kubernetes Training
#

## Statefulsets

# Install bitnami/consul chart
helm install bitnami/consul --name consul
# Each pod has each own pvc
kubectl get pvc
# scale up/down is ordered
kubectl scale sts consul-consul --replicas=5
kg pods --watch
kubectl scale sts consul-consul --replicas=3
kg pods --watch
# Delete helm and check how pvc are still there
helm delete --purge consul
kubectl get pvc
# Delete the consul pvcs
kubectl rm pvc $(kubectl get pvc -o jsonpath='{.items[*].metadata.name}' )

## Pod Autoscaler
# Enable metrics-server addon
minikube addons enable metrics-server
# Create a deployment for a simple php-apache application
kubectl run php-apache --image=k8s.gcr.io/hpa-example --requests=cpu=200m --expose --port=80
# Create Horizontal Pod Autoscaler
cat > hpa-apache-php.yaml << 'EOF'
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: php-apache
spec:
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: php-apache
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 50
EOF
k create -f hpa-apache-php.yaml
# Increase load
kubectl run -i --tty load-generator --image=busybox /bin/sh
while true; do wget -q -O- http://php-apache.default.svc.cluster.local; done
# In different terminals, check hpa and pod statuses
kubectl get hpa -w
kubectl get pods -w
kubectl delete deployment load-generator
# Cleaning
kubectl delete deployment php-apache
kubectl delete svc php-apache
kubectl delete hpa php-apache

###################
# Helm Installation
###################

## Linux installation
wget https://storage.googleapis.com/kubernetes-helm/helm-v2.14.1-linux-amd64.tar.gz && tar xfv helm-v2.14.1-linux-amd64.tar.gz && sudo mv linux-amd64/helm /usr/local/bin && rm -rf linux-amd64/ && rm helm-v2.14.1-linux-amd64.tar.gz
## OS X installation
wget https://storage.googleapis.com/kubernetes-helm/helm-v2.14.1-darwin-amd64.tar.gz && tar xfv helm-v2.14.1-darwin-amd64.tar.gz && sudo mv darwin-amd64/helm /usr/local/bin && rm -rf darwin-amd64/ && rm helm-v2.14.1-linux-amd64.tar.gz

## First steps with Helm
helm init
helm search stable
helm install --name dokuwiki stable/dokuwiki
helm list

## Create a new chart skeleton
my-wordpress/nginx
## Let's use the solution we made to create a WP chart
mv my-nginx/ my-wordpress/
rm -rf my-wordpress/templates/*
cp -rf ../intel-training-1/activity/solution/*.yaml my-wordpress/templates/
kubectl create namespace intel
helm install --name my-wordpress my-wordpress/

## Deploy WordPress modifying some settings
helm install --name my-wordpress my-wordpress --set app.blogname=”This is my blog”

## Install Official Stable WP and Upgrades
helm install stable/wordpress --name my-stable-wordpress
helm upgrade my-stable-wordpress stable/wordpress --set ingress.enabled=true
helm upgrade my-stable-wordpress stable/wordpress --set image.tag=5.2.1
helm history my-stable-wordpress

## Chart repositories
helm repo list
helm repo add bitnami https://charts.bitnami.com/bitnami
helm repo update
